#
# Python build system configuration
# https://peps.python.org/pep-0518/
#

[build-system]
requires      = ["pdm-pep517"]
build-backend = "pdm.pep517.api"

[project]
name = "picata"
version = "0.0.1"
description = "These are my web pages."
readme = "README.md"
requires-python = ">=3.12.2"
license = "MIT"
keywords = []
authors = [{ name = "Ada Wright", email = "ada@hpk.io" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = ["wagtail>=6.1"]

[project.urls]
Documentation = "https://github.com/hipikat/picata#readme"
Issues        = "https://github.com/hipikat/picata/issues"
Source        = "https://github.com/hipikat/picata"

#
# PDM (Python Package Management) - https://pdm-project.org/
#
[tool.pdm.dev-dependencies]
dev = ["pip>=24.0", "eyrie @ file:///${PROJECT_ROOT}/../eyrie"]

#
# Coverage - https://coverage.readthedocs.io/
#
[tool.coverage.run]
source_pkgs = ["picata", "tests"]
branch      = true
parallel    = true

[tool.coverage.paths]
tests = ["tests", "*/picata/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

#
# versioningit - https://versioningit.readthedocs.io/
#
[tool.versioningit.format]
# When there have been commits since the most recent tag:
distance = "{version}.dev{distance}+{vcs}{rev}"
# When there are uncommitted changes:
dirty = "{version}+dirty"
# When there are both commits and uncommitted changes:
distance-dirty = "{version}.dev{distance}+{vcs}{rev}.dirty"

[tool.versioningit.vcs]
method      = "git"
match       = ["v*"]
default-tag = "v0.0.0"

[tool.versioningit.tag2version]
method        = "basic"
regex         = "^v(\\d+\\.\\d+\\.\\d+)(?:-([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?$"
require-match = true
