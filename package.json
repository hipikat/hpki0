{
  "name": "hpk",
  "version": "0.1.0",
  "description": "Ada's little website",
  "author": {
    "name": "Ada Wright",
    "email": "ada@hpk.io",
    "url": "https://hpk.io/"
  },
  "license": "BSD 2-clause",
  "homepage": "https://github.com/hipikat/hpk.io#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/hipikat/hpk.io"
  },
  "bugs": {
    "url": "https://github.com/hipikat/hpk.io/issues"
  },
  "config": {
    "port": 8000
  },
  "private": true,
  "dependencies": {
    "jquery": "^3.5.1",
    "motion-ui": "^2.0.3",
    "npm-run-all": "^4.1.5",
    "what-input": "^5.2.10"
  },
  "devDependencies": {
    "@babel/core": "^7.12.10",
    "@babel/plugin-transform-runtime": "^7.12.10",
    "@babel/preset-env": "^7.12.10",
    "@babel/preset-react": "^7.12.10",
    "@fortawesome/fontawesome-free": "^5.15.1",
    "autoprefixer": "^10.1.0",
    "babel-loader": "^8.2.2",
    "chokidar": "^3.4.3",
    "chokidar-cli": "^2.1.0",
    "concurrently": "^5.3.0",
    "copy-webpack-plugin": "^6.4.0",
    "css-loader": "^5.0.1",
    "css-minimizer-webpack-plugin": "^1.1.5",
    "file-loader": "^6.2.0",
    "foundation-sites": "^6.6.3",
    "handlebars": "^4.7.6",
    "html-webpack-plugin": "^4.5.0",
    "mini-css-extract-plugin": "^1.3.3",
    "postcss": "^8.2.1",
    "postcss-import": "^13.0.0",
    "postcss-loader": "^4.1.0",
    "postcss-preset-env": "^6.7.0",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "sass": "^1.30.0",
    "sass-lint": "^1.13.1",
    "sass-loader": "^10.0.5",
    "webpack": "^5.10.1",
    "webpack-cli": "^4.2.0"
  },
  "scripts": {
    "teardown": "rm -Rf $(pipenv --venv) && rm -Rf ./node_modules",
    "init:py": "pipenv install --python `pyenv which python`",
    "init:node": "npm install --save-prod",
    "init:py:dev": "pipenv install --dev --python `pyenv which python`",
    "init:node:dev": "npm install --save-prod --save-dev",
    "init": "npm run init:py:dev ; npm run init:node:dev",
    "rebuild": "npm run teardown ; npm run init:node:dev & PIDNPM=$! ; npm run init:py:dev & PIDPY=$! ; wait $PIDNPM ; wait $PIDPY",
    "npm:outdated": "npm outdated",
    "npm:update": "npm update --save-prod --save-dev",
    "git+lock": "git add Pipfile.lock package-lock.json",
    "git-lock": "git reset Pipfile.lock package-lock.json",
    "test": "echo \"Error: no test specified\" && exit 1",
    "freeze": "pipenv run pip freeze > etc/requirements.txt",
    "docker": "docker -f etc/Dockerfile --env-file .env",
    "docker:build:base": "docker build -f etc/Dockerfile --target hpk-web-base -t hpk-web:_base .",
    "docker:build:builder": "docker build -f etc/Dockerfile --target hpk-web-build -t hpk-web:build .",
    "docker:build:debug": "docker build -f etc/Dockerfile --target hpk-web-debug -t hpk-web:debug .",
    "docker:build:stage": "docker build -f etc/Dockerfile --target hpk-web-stage -t hpk-web:stage .",
    "docker:build": "run-s docker:build:builder docker:build:debug docker:build:stage",
    "docker:compose": "docker-compose -f etc/docker-compose.yml up",
    "clean:static": "rm -Rf static/*",
    "clean:build:webpack": "rm -Rf var/build-webpack/*",
    "clean": "run-p clean:static clean:build:webpack",
    "webpack": "webpack -c etc/webpack.config.js",
    "webpack:debug": "webpack -c etc/webpack.config.js --env debug",
    "webpack:all": "run-p webpack webpack:debug",
    "watch:webpack": "webpack -c etc/webpack.config.js --watch",
    "watch:webpack:debug": "webpack -c etc/webpack.config.js --env debug --watch",
    "collectstatic": "pipenv run collectstatic",
    "clean:collectstatic": "rm -Rf static/* && pipenv run manage collectstatic",
    "watch:collectstatic": "chokidar 'var/build-webpack/**/*.*' --debounce 1200 -c 'npm run collectstatic'",
    "watch:debug": "concurrently --names '🐛>build,🥚static' --prefix-colors 'blue,green' 'npm run watch:webpack:debug' 'npm run watch:collectstatic'",
    "watch:prod": "concurrently --names '🦋>build,🥚static' --prefix-colors 'cyan,green' 'npm run watch:webpack' 'npm run watch:collectstatic'",
    "watch": "concurrently --names '🐛>build,>🦋build,🥚static' --prefix-colors 'blue,cyan,green' 'npm run watch:webpack:debug' 'npm run watch:webpack' 'npm run watch:collectstatic'",
    "build:static:debug": "run-s webpack:debug collectstatic",
    "build:static:prod": "run-s webpack collectstatic",
    "build:static": "run-s webpack:all collectstatic",
    "clean:debug": "run-s clean build:debug",
    "clean:prod": "run-s clean build:prod",
    "clean:build": "run-s clean build",
    "lint:sass": "sass-lint -v",
    "lint": "npm run lint:sass",
    "watch:lint:sass": "chokidar 'src/sass/**/*.sass' 'src/sass/**/*.scss' -c 'npm run lint:sass'",
    "watch:lint": "concurrently --names '🧽>sass' --prefix-colors 'purple' 'npm run watch:lint:sass'",
    "develop": "concurrently --handle-input --names '🌏server,🐛>build,🦋>build,🥚static' --prefix-colors 'blue,cyan,green,gray' 'pipenv run server' 'npm run watch:webpack:debug' 'npm run watch:webpack' 'npm run watch:collectstatic'",
    "develop-": "concurrently --names '🐛>build,🦋>build,🥚static' --prefix-colors 'blue,cyan,green' 'npm run watch:webpack:debug' 'npm run watch:webpack' 'npm run watch:collectstatic'",
    "server": "pipenv run server",
    "server+": "pipenv run server_plus",
    "server+view": "pipenv run server_debug_view",
    "server+except": "pipenv run server_debug_except",
    "getenv:npm": "node -e 'console.log(process.env)' | grep npm"
  },
  "sasslintConfig": "./etc/sass-lint.yml"
}
